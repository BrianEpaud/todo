class TodoApp extends React.Component {
  constructor(props) {
    super(props);
    this.state = { items: [], text: '' };
    this.handleChange = this.handleChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  render() {
    return (
      <div>
        <h3>Ã€ faire</h3>
        <TodoList items={this.state.items} />
       <TodoForm 
       items={this.state.items}
       text={this.state.text}
       change={this.handleChange} 
       submit={this.handleSubmit}
       
        />
      </div>
    );
  }

  handleChange(e) {
    this.setState({ text: e.target.value });
  }

  handleSubmit(e) {
    e.preventDefault();
    if (!this.state.text.length) {
      return;
    }
    const newItem = {
      text: this.state.text,
      id: Date.now()
    };
    this.setState(state => ({
      items: state.items.concat(newItem),
      text: ''
    }));
  }
}

class TodoList extends React.Component {
  render() {
    return (
      <ul>
        {this.props.items.map(item => (
          <li key={item.id}>{item.text}</li>
        ))}
      </ul>
    );
  }
}
class TodoForm extends React.Component {
render() {
   return(
    <form onSubmit={this.props.submit}>          
        <label htmlFor="new-todo">
            Que faut-il faire ?
        </label>
            <input
               id="new-todo"
               onChange={this.props.change}
               value={this.props.text}
               />
          <button>
            Ajouter #{this.props.items.length + 1}
          </button>
        </form>
   )

}
}

ReactDOM.render(
  <TodoApp />,
  document.getElementById('todos-example')
);